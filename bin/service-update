#!/usr/bin/env bash

###
# Brave CORE Startup script
#
# Starts up supplemenetal processes
# Usage: ./service-update start
# Usage: ./service-update stop
# Usage: ./service-update restart
###

if [[ -z "$CORE_HOME" || -z "$CORE_NAME" || -z "$CORE_UPDATE_HOURS" ]];
then
    echo "You need to set CORE_HOME, CORE_NAME and CORE_UPDATE_HOURS first."
    exit 1
fi

# key update Screen name
SCREEN_NAME_KEYS="core_update_keys-$CORE_NAME"
SCREEN_NAME_CHARS="core_update_chars-$CORE_NAME"

# cd into the right folder
cd $CORE_HOME

# are we in a virtualenv?
python -c 'import sys; print sys.real_prefix' 1>/dev/null 2>/dev/null && INVENV=1 || INVENV=0

# if not, activate it
if [[ "$INVENV" != "1" ]]
then
    # Activate the virtual env
    . ../bin/activate
fi

# ---------------------------------
# Misc Functions
#
update_keys_stop () {
    # Reload the key update process
    screen -list | grep -q "${SCREEN_NAME_KEYS}"
    if [[ $? == "0" ]]
    then
        echo "Screen '${SCREEN_NAME_KEYS}' Found! Killing...";
        screen -S ${SCREEN_NAME_KEYS} -X quit
    fi
}

update_chars_stop () {
    # Reload the chars update process
    screen -list | grep -q "${SCREEN_NAME_CHARS}"
    if [[ $? == "0" ]]
    then
        echo "Screen '${SCREEN_NAME_CHARS}' Found! Killing...";
        screen -S ${SCREEN_NAME_CHARS} -X quit
    fi
}

update_keys_start () {
    # startup the core key updater
    screen -list | grep -q "${SCREEN_NAME_KEYS}"
    if [[ $? == "1" ]]
    then
        echo "Starting New ${SCREEN_NAME_KEYS} Screen now...";
        screen -dmS ${SCREEN_NAME_KEYS} ./bin/core-shell update_chars.py
    fi
}
update_chars_start () {
    # startup the core key updater
    screen -list | grep -q "${SCREEN_NAME_CHARS}"
    if [[ $? == "1" ]]
    then
        echo "Starting New ${SCREEN_NAME_CHARS} Screen now...";
        screen -dmS ${SCREEN_NAME_CHARS} ./bin/core-shell update_keys.py
    fi
}

#
# Misc Functions - END
# ---------------------------------

# sync key update script status based on input $1
if [[ "$1" == "start" ]]
then
    update_keys_start
    update_chars_start
elif [[ "$1" == "stop" ]]
then
    update_keys_stop
    update_chars_stop

elif [[ "$1" == "restart" ]]
then
    update_keys_stop
    update_chars_stop
    update_keys_start
    update_chars_start
fi
